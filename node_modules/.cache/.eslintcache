[{"D:\\Font-End\\support-tool-v2\\support-tool\\src\\index.js":"1","D:\\Font-End\\support-tool-v2\\support-tool\\src\\App.js":"2","D:\\Font-End\\support-tool-v2\\support-tool\\src\\reportWebVitals.js":"3","D:\\Font-End\\support-tool-v2\\support-tool\\src\\components\\DashboardLayout\\DashboardLayout.js":"4","D:\\Font-End\\support-tool-v2\\support-tool\\src\\components\\DashboardLayout\\SidebarNav\\SidebarNav.js":"5","D:\\Font-End\\support-tool-v2\\support-tool\\src\\components\\DashboardLayout\\FunctionInfo\\FunctionInfo.js":"6","D:\\Font-End\\support-tool-v2\\support-tool\\src\\components\\DashboardLayout\\NavMain\\NavMain.js":"7","D:\\Font-End\\support-tool-v2\\support-tool\\src\\components\\DashboardLayout\\NavBranch\\NavBranch.js":"8","D:\\Font-End\\support-tool-v2\\support-tool\\src\\data\\menu.js":"9","D:\\Font-End\\support-tool-v2\\support-tool\\src\\redux\\reducers\\rootReducer.js":"10","D:\\Font-End\\support-tool-v2\\support-tool\\src\\redux\\reducers\\NavBarReducer.js":"11","D:\\Font-End\\support-tool-v2\\support-tool\\src\\redux\\contants\\NavBar.js":"12","D:\\Font-End\\support-tool-v2\\support-tool\\src\\components\\Page\\Page.js":"13","D:\\Font-End\\support-tool-v2\\support-tool\\src\\components\\Page\\GenerateConstructorVariables\\GenerateConstructorVariables.js":"14","D:\\Font-End\\support-tool-v2\\support-tool\\src\\components\\Page\\SetVariables\\SetVariables.js":"15"},{"size":811,"mtime":1624198558884,"results":"16","hashOfConfig":"17"},{"size":380,"mtime":1624173041789,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":348,"mtime":1624199001049,"results":"20","hashOfConfig":"17"},{"size":433,"mtime":1624172097422,"results":"21","hashOfConfig":"17"},{"size":609,"mtime":1624193255080,"results":"22","hashOfConfig":"17"},{"size":1828,"mtime":1624202051650,"results":"23","hashOfConfig":"17"},{"size":942,"mtime":1624192808025,"results":"24","hashOfConfig":"17"},{"size":651,"mtime":1624212566294,"results":"25","hashOfConfig":"17"},{"size":181,"mtime":1624190095860,"results":"26","hashOfConfig":"17"},{"size":328,"mtime":1624202086194,"results":"27","hashOfConfig":"17"},{"size":43,"mtime":1624191442566,"results":"28","hashOfConfig":"17"},{"size":761,"mtime":1624197185555,"results":"29","hashOfConfig":"17"},{"size":6216,"mtime":1624214611671,"results":"30","hashOfConfig":"17"},{"size":2956,"mtime":1624214211803,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1p7wa0s",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"D:\\Font-End\\support-tool-v2\\support-tool\\src\\index.js",[],["69","70"],"D:\\Font-End\\support-tool-v2\\support-tool\\src\\App.js",["71"],"import logo from './logo.svg';\nimport './App.scss';\nimport DashboardLayout from './components/DashboardLayout/DashboardLayout';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path = \"/\" component = {DashboardLayout}/>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","D:\\Font-End\\support-tool-v2\\support-tool\\src\\reportWebVitals.js",[],"D:\\Font-End\\support-tool-v2\\support-tool\\src\\components\\DashboardLayout\\DashboardLayout.js",[],"D:\\Font-End\\support-tool-v2\\support-tool\\src\\components\\DashboardLayout\\SidebarNav\\SidebarNav.js",[],"D:\\Font-End\\support-tool-v2\\support-tool\\src\\components\\DashboardLayout\\FunctionInfo\\FunctionInfo.js",[],"D:\\Font-End\\support-tool-v2\\support-tool\\src\\components\\DashboardLayout\\NavMain\\NavMain.js",[],"D:\\Font-End\\support-tool-v2\\support-tool\\src\\components\\DashboardLayout\\NavBranch\\NavBranch.js",["72"],"import React, { Component } from 'react';\r\nimport style from './NavBranch.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {NAV_BAR_CLICK} from '../../../redux/contants/NavBar'\r\n\r\nclass NavBranch extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    NavBarSelect = (info) => {\r\n        this.props.dispatch({\r\n            type: NAV_BAR_CLICK,\r\n            data: info\r\n        })\r\n    }\r\n    render() {\r\n        const info = this.props.info;\r\n        return (\r\n            <div className = {style.NavBranch}>\r\n                <div className = \"nav-area\">\r\n                    <NavLink className = \"nav__link\" to = {info.url} onClick = {() => this.NavBarSelect(info)} >\r\n                        <span>{info.title}</span>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null)(NavBranch);","D:\\Font-End\\support-tool-v2\\support-tool\\src\\data\\menu.js",[],"D:\\Font-End\\support-tool-v2\\support-tool\\src\\redux\\reducers\\rootReducer.js",[],"D:\\Font-End\\support-tool-v2\\support-tool\\src\\redux\\reducers\\NavBarReducer.js",["73"],"import {NAV_BAR_CLICK} from '../contants/NavBar';\r\n\r\nconst initialState = {\r\n    selectedInfo : {}\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n    case NAV_BAR_CLICK:\r\n        state.selectedInfo = action.data;\r\n        return {...state}\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","D:\\Font-End\\support-tool-v2\\support-tool\\src\\redux\\contants\\NavBar.js",[],"D:\\Font-End\\support-tool-v2\\support-tool\\src\\components\\Page\\Page.js",["74"],"import React, { Component } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport style from './Page.module.scss'\r\nimport {menu} from '../../data/menu';\r\n\r\nexport default class Page extends Component {\r\n    renderRoute = () => {\r\n       return menu.map((item, index) => {\r\n            return item.sub.map((item2, index2) => {\r\n                return (\r\n                    <Route key = {index + '_' + index2} path = {item2.url} component = {item2.component} />\r\n                )\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className = {style.Page}>\r\n                 <Switch>\r\n                    {this.renderRoute()}\r\n                 </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Font-End\\support-tool-v2\\support-tool\\src\\components\\Page\\GenerateConstructorVariables\\GenerateConstructorVariables.js",["75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98"],"import React, { Component, useRef } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport style from './GenerateConstructorVariables.module.scss';\r\nimport data from '../../../data/SetVariable.json'\r\n\r\nexport default class GenerateConstructorVariables extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            jaVar: [],\r\n            enVar: [],\r\n            dataType: [],\r\n            result: \"\",\r\n        }\r\n    }\r\n    convert = () => {\r\n        let {jaVar, enVar, dataType} = this.state;\r\n        jaVar = jaVar.filter((el) => {\r\n            return el != \"\";\r\n        });\r\n        enVar = enVar.filter((el) => {\r\n            return el != \"\";\r\n        });\r\n        dataType = dataType.filter((el) => {\r\n            return el != \"\";\r\n        });\r\n        if (jaVar.length * enVar.length * dataType.length === 0) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'All fields must be entered',\r\n              })\r\n              return;\r\n        }\r\n        if ((jaVar.length + enVar.length + dataType.length)/(jaVar.length*3) !== 1) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Line numbers of fields do not match',\r\n              })\r\n            return;\r\n        }\r\n\r\n        let result = \"\";\r\n        let obj = data;\r\n\r\n        for(let i = 0; i< jaVar.length ; i++) {\r\n            if (enVar[i].indexOf('_') < 0) {\r\n                switch (dataType[i]) {\r\n                    case \"string\":\r\n                        result += \"/** \" + jaVar[i] + \" */\" + \"\\n\"\r\n                                + \"readonly \" + enVar[i] + \": KnockoutObservable<string>;\" + \"\\n\"\r\n                                + \"/** \" + jaVar[i] + \"(focus) */\" + \"\\n\"\r\n                                + \"readonly focus\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\"\r\n                                + \"/** \" + jaVar[i] + \"(disable) */\" + \"\\n\"\r\n                                + \"readonly disable\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\";\r\n                        break;\r\n                    case \"integer\":\r\n                        result += \"/** \" + jaVar[i] + \" */\" + \"\\n\"\r\n                                + \"readonly \" + enVar[i] + \": KnockoutObservable<number>;\" + \"\\n\"\r\n                                + \"/** \" + jaVar[i] + \"(focus) */\" + \"\\n\"\r\n                                + \"readonly focus\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\"\r\n                                + \"/** \" + jaVar[i] + \"(disable) */\" + \"\\n\"\r\n                                + \"readonly disable\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\";\r\n                        break;\r\n                    case \"function\":\r\n                        result += \"/** \" + jaVar[i] + \"(focus) */\" + \"\\n\"\r\n                                + \"readonly focus\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\"\r\n                                + \"/** \" + jaVar[i] + \"(disable) */\" + \"\\n\"\r\n                                + \"readonly disable\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\";\r\n                    default:\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: 'Data Type does not match',\r\n                          })\r\n                        break;\r\n                }\r\n            } else {\r\n                result += \"/** \" + jaVar[i] + \" */\" + \"\\n\"\r\n                    + \"private \" + enVar[i] + \": \" +  dataType[i] +\";\" + \"\\n\"\r\n            }\r\n        }\r\n        this.setState({\r\n            result: result\r\n        })\r\n    }\r\n    onChange = (e) => {\r\n        let name = e.nativeEvent.target.name;\r\n        let value = e.target.value.split(\"\\n\");\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    copy = () => {\r\n        const el = document.createElement('textarea');\r\n        el.value = this.state.result;\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n    }\r\n\r\n    Clear = () => {\r\n        this.setState({\r\n            jaVar: [],\r\n            enVar: [],\r\n            dataType: [],\r\n            result: \"\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {jaVar, enVar, dataType} = this.state;\r\n        jaVar = jaVar.join(\"\\n\");\r\n        enVar = enVar.join(\"\\n\");\r\n        dataType = dataType.join(\"\\n\");\r\n        return (\r\n            <div className = {style.GenerateConstructorVariables}>\r\n                <div className = \"input-area d-flex\">\r\n                    <div className=\"japanese-variable input-variable\">\r\n                        <label>Japanese Variables</label>\r\n                        <textarea name = \"jaVar\" value = {jaVar} onChange = {this.onChange}></textarea>\r\n                    </div>\r\n                    <div className=\"english-variable input-variable\">\r\n                        <label>English Variables</label>\r\n                        <textarea name = \"enVar\" value = {enVar} onChange = {this.onChange}></textarea>\r\n                    </div>\r\n                    <div className=\"data-type input-variable\">\r\n                        <label>Data Type</label>\r\n                        <textarea name = \"dataType\" value = {dataType} onChange = {this.onChange}></textarea>\r\n                    </div>\r\n                    <div className=\"convert\">\r\n                        <button className = \"btn btn-success\" onClick = {this.convert}>Convert</button>\r\n                        <button className = \"btn btn-danger\" onClick = {this.Clear}>Clear</button>\r\n                    </div>\r\n                </div>\r\n                <div className = \"result-area\">\r\n                    <div className = \"d-flex justify-content-between\">\r\n                        <label>Result</label>\r\n                        <button className = \"btn btn-light btn-outline-secondary\" onClick = {this.copy}>Copy</button>\r\n                    </div>\r\n                    <textarea value = {this.state.result} disabled>\r\n                    </textarea>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Font-End\\support-tool-v2\\support-tool\\src\\components\\Page\\SetVariables\\SetVariables.js",["99","100"],"import React, { Component } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport style from './SetVariables.module.scss'\r\nimport data from '../../../data/SetVariable.json'\r\n\r\nexport default class SetVariables extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            jaVar: [],\r\n            values: [],\r\n            result: \"\",\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        let name = e.nativeEvent.target.name;\r\n        let value = e.target.value.split(\"\\n\");\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    convert = () => {\r\n        console.log(data);\r\n        let {jaVar, values} = this.state;\r\n        jaVar = jaVar.filter((el) => {\r\n            return el != \"\";\r\n        });\r\n        values = values.filter((el) => {\r\n            return el != \"\";\r\n        });\r\n\r\n        if (jaVar.length * values.length === 0) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'All fields must be entered',\r\n              })\r\n              return;\r\n        }\r\n        if ((jaVar.length + values.length)/(jaVar.length*3) !== 1) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Line numbers of fields do not match',\r\n              })\r\n            return;\r\n        }\r\n        \r\n\r\n    }\r\n    render() {\r\n        let {jaVar, values } = this.state;\r\n        jaVar = jaVar.join(\"\\n\");\r\n        values = values.join(\"\\n\");\r\n        return (\r\n            <div className = {style.SetVariables}>\r\n                <div className = \"input-area d-flex\">\r\n                    <div className=\"japanese-variable input-variable\">\r\n                        <label>Japanese Variables</label>\r\n                        <textarea name = \"jaVar\" value = {jaVar} onChange = {this.onChange}></textarea>\r\n                    </div>\r\n                    <div className=\"english-variable input-variable\">\r\n                        <label>Values</label>\r\n                        <textarea name = \"values\" value = {values} onChange = {this.onChange}></textarea>\r\n                    </div>\r\n                    <div className=\"convert\">\r\n                        <button className = \"btn btn-success\" onClick = {this.convert}>Convert</button>\r\n                        <button className = \"btn btn-danger\" onClick = {this.Clear}>Clear</button>\r\n                    </div>\r\n                </div>\r\n                <div className = \"result-area\">\r\n                    <div className = \"d-flex justify-content-between\">\r\n                        <label>Result</label>\r\n                        <button className = \"btn btn-light btn-outline-secondary\" onClick = {this.copy}>Copy</button>\r\n                    </div>\r\n                    <textarea value = {this.state.result} disabled>\r\n                    </textarea>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":12},{"ruleId":"109","severity":1,"message":"110","line":8,"column":5,"nodeType":"111","messageId":"112","endLine":10,"endColumn":6},{"ruleId":"113","severity":1,"message":"114","line":7,"column":1,"nodeType":"115","endLine":16,"endColumn":2},{"ruleId":"105","severity":1,"message":"116","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":18},{"ruleId":"105","severity":1,"message":"117","line":1,"column":28,"nodeType":"107","messageId":"108","endLine":1,"endColumn":34},{"ruleId":"118","severity":1,"message":"119","line":19,"column":23,"nodeType":"120","messageId":"121","endLine":19,"endColumn":25},{"ruleId":"118","severity":1,"message":"119","line":22,"column":23,"nodeType":"120","messageId":"121","endLine":22,"endColumn":25},{"ruleId":"118","severity":1,"message":"119","line":25,"column":23,"nodeType":"120","messageId":"121","endLine":25,"endColumn":25},{"ruleId":"105","severity":1,"message":"122","line":45,"column":13,"nodeType":"107","messageId":"108","endLine":45,"endColumn":16},{"ruleId":"123","severity":1,"message":"124","line":51,"column":61,"nodeType":"120","messageId":"125","endLine":51,"endColumn":62},{"ruleId":"123","severity":1,"message":"124","line":52,"column":92,"nodeType":"120","messageId":"125","endLine":52,"endColumn":93},{"ruleId":"123","severity":1,"message":"124","line":53,"column":68,"nodeType":"120","messageId":"125","endLine":53,"endColumn":69},{"ruleId":"123","severity":1,"message":"124","line":54,"column":98,"nodeType":"120","messageId":"125","endLine":54,"endColumn":99},{"ruleId":"123","severity":1,"message":"124","line":55,"column":70,"nodeType":"120","messageId":"125","endLine":55,"endColumn":71},{"ruleId":"123","severity":1,"message":"124","line":56,"column":100,"nodeType":"120","messageId":"125","endLine":56,"endColumn":101},{"ruleId":"123","severity":1,"message":"124","line":59,"column":61,"nodeType":"120","messageId":"125","endLine":59,"endColumn":62},{"ruleId":"123","severity":1,"message":"124","line":60,"column":92,"nodeType":"120","messageId":"125","endLine":60,"endColumn":93},{"ruleId":"123","severity":1,"message":"124","line":61,"column":68,"nodeType":"120","messageId":"125","endLine":61,"endColumn":69},{"ruleId":"123","severity":1,"message":"124","line":62,"column":98,"nodeType":"120","messageId":"125","endLine":62,"endColumn":99},{"ruleId":"123","severity":1,"message":"124","line":63,"column":70,"nodeType":"120","messageId":"125","endLine":63,"endColumn":71},{"ruleId":"123","severity":1,"message":"124","line":64,"column":100,"nodeType":"120","messageId":"125","endLine":64,"endColumn":101},{"ruleId":"123","severity":1,"message":"124","line":67,"column":68,"nodeType":"120","messageId":"125","endLine":67,"endColumn":69},{"ruleId":"123","severity":1,"message":"124","line":68,"column":98,"nodeType":"120","messageId":"125","endLine":68,"endColumn":99},{"ruleId":"123","severity":1,"message":"124","line":69,"column":70,"nodeType":"120","messageId":"125","endLine":69,"endColumn":71},{"ruleId":"123","severity":1,"message":"124","line":70,"column":100,"nodeType":"120","messageId":"125","endLine":70,"endColumn":101},{"ruleId":"126","severity":1,"message":"127","line":71,"column":21,"nodeType":"128","messageId":"129","endLine":77,"endColumn":31},{"ruleId":"123","severity":1,"message":"124","line":80,"column":53,"nodeType":"120","messageId":"125","endLine":80,"endColumn":54},{"ruleId":"123","severity":1,"message":"124","line":81,"column":72,"nodeType":"120","messageId":"125","endLine":81,"endColumn":73},{"ruleId":"118","severity":1,"message":"119","line":27,"column":23,"nodeType":"120","messageId":"121","endLine":27,"endColumn":25},{"ruleId":"118","severity":1,"message":"119","line":30,"column":23,"nodeType":"120","messageId":"121","endLine":30,"endColumn":25},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Redirect' is defined but never used.","'useRef' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'obj' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-global-assign","no-unsafe-negation"]