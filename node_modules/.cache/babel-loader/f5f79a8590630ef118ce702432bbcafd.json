{"ast":null,"code":"var _jsxFileName = \"D:\\\\Font-End\\\\support-tool-v2\\\\support-tool\\\\src\\\\components\\\\Page\\\\GenerateConstructorVariables\\\\GenerateConstructorVariables.js\";\nimport React, { Component, useRef } from 'react';\nimport Swal from 'sweetalert2';\nimport style from './GenerateConstructorVariables.module.scss';\nimport data from '../../../data/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class GenerateConstructorVariables extends Component {\n  constructor(props) {\n    super(props);\n\n    this.convert = () => {\n      let {\n        jaVar,\n        enVar,\n        dataType\n      } = this.state;\n      jaVar = jaVar.filter(el => {\n        return el != \"\";\n      });\n      enVar = enVar.filter(el => {\n        return el != \"\";\n      });\n      dataType = dataType.filter(el => {\n        return el != \"\";\n      });\n\n      if (jaVar.length * enVar.length * dataType.length === 0) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'All fields must be entered'\n        });\n        return;\n      }\n\n      if ((jaVar.length + enVar.length + dataType.length) / (jaVar.length * 3) !== 1) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Line numbers of fields do not match'\n        });\n        return;\n      }\n\n      let result = \"\";\n\n      for (let i = 0; i < jaVar.length; i++) {\n        if (enVar[i].indexOf('_') < 0) {\n          switch (dataType[i]) {\n            case \"string\":\n              result += \"/** \" + jaVar[i] + \" */\" + \"\\n\" + \"readonly \" + enVar[i] + \": KnockoutObservable<string>;\" + \"\\n\" + \"/** \" + jaVar[i] + \"(focus) */\" + \"\\n\" + \"readonly focus\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\" + \"/** \" + jaVar[i] + \"(disable) */\" + \"\\n\" + \"readonly disable\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\";\n              break;\n\n            case \"integer\":\n              result += \"/** \" + jaVar[i] + \" */\" + \"\\n\" + \"readonly \" + enVar[i] + \": KnockoutObservable<number>;\" + \"\\n\" + \"/** \" + jaVar[i] + \"(focus) */\" + \"\\n\" + \"readonly focus\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\" + \"/** \" + jaVar[i] + \"(disable) */\" + \"\\n\" + \"readonly disable\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\";\n              break;\n\n            case \"function\":\n              result += \"/** \" + jaVar[i] + \"(focus) */\" + \"\\n\" + \"readonly focus\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\" + \"/** \" + jaVar[i] + \"(disable) */\" + \"\\n\" + \"readonly disable\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\";\n\n            default:\n              Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'Data Type does not match'\n              });\n              break;\n          }\n        } else {\n          result += \"/** \" + jaVar[i] + \" */\" + \"\\n\" + \"private \" + enVar[i] + \": \" + dataType[i] + \";\" + \"\\n\";\n        }\n      }\n\n      this.setState({\n        result: result\n      });\n    };\n\n    this.onChange = e => {\n      let name = e.nativeEvent.target.name;\n      let value = e.target.value.split(\"\\n\");\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.copy = () => {\n      const el = document.createElement('textarea');\n      el.value = this.state.result;\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n    };\n\n    this.Clear = () => {\n      this.setState({\n        jaVar: [],\n        enVar: [],\n        dataType: [],\n        result: \"\"\n      });\n    };\n\n    this.state = {\n      jaVar: [],\n      enVar: [],\n      dataType: [],\n      result: \"\"\n    };\n  }\n\n  render() {\n    let {\n      jaVar,\n      enVar,\n      dataType\n    } = this.state;\n    jaVar = jaVar.join(\"\\n\");\n    enVar = enVar.join(\"\\n\");\n    dataType = dataType.join(\"\\n\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.GenerateConstructorVariables,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"japanese-variable input-variable\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Japanese Variables\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"jaVar\",\n            value: jaVar,\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"english-variable input-variable\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"English Variables\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"enVar\",\n            value: enVar,\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-type input-variable\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Data Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"dataType\",\n            value: dataType,\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"convert\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: this.convert,\n            children: \"Convert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: this.Clear,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-light btn-outline-secondary\",\n            onClick: this.copy,\n            children: \"Copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: this.state.result,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Font-End/support-tool-v2/support-tool/src/components/Page/GenerateConstructorVariables/GenerateConstructorVariables.js"],"names":["React","Component","useRef","Swal","style","data","GenerateConstructorVariables","constructor","props","convert","jaVar","enVar","dataType","state","filter","el","length","fire","icon","title","text","result","i","indexOf","setState","onChange","e","name","nativeEvent","target","value","split","copy","document","createElement","body","appendChild","select","execCommand","removeChild","Clear","render","join"],"mappings":"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","sourcesContent":["import React, { Component, useRef } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport style from './GenerateConstructorVariables.module.scss';\r\nimport data from '../../../data/'\r\n\r\nexport default class GenerateConstructorVariables extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            jaVar: [],\r\n            enVar: [],\r\n            dataType: [],\r\n            result: \"\",\r\n        }\r\n    }\r\n    convert = () => {\r\n        let {jaVar, enVar, dataType} = this.state;\r\n        jaVar = jaVar.filter((el) => {\r\n            return el != \"\";\r\n        });\r\n        enVar = enVar.filter((el) => {\r\n            return el != \"\";\r\n        });\r\n        dataType = dataType.filter((el) => {\r\n            return el != \"\";\r\n        });\r\n        if (jaVar.length * enVar.length * dataType.length === 0) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'All fields must be entered',\r\n              })\r\n              return;\r\n        }\r\n        if ((jaVar.length + enVar.length + dataType.length)/(jaVar.length*3) !== 1) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Line numbers of fields do not match',\r\n              })\r\n            return;\r\n        }\r\n\r\n        let result = \"\";\r\n        \r\n        for(let i = 0; i< jaVar.length ; i++) {\r\n            if (enVar[i].indexOf('_') < 0) {\r\n                switch (dataType[i]) {\r\n                    case \"string\":\r\n                        result += \"/** \" + jaVar[i] + \" */\" + \"\\n\"\r\n                                + \"readonly \" + enVar[i] + \": KnockoutObservable<string>;\" + \"\\n\"\r\n                                + \"/** \" + jaVar[i] + \"(focus) */\" + \"\\n\"\r\n                                + \"readonly focus\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\"\r\n                                + \"/** \" + jaVar[i] + \"(disable) */\" + \"\\n\"\r\n                                + \"readonly disable\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\";\r\n                        break;\r\n                    case \"integer\":\r\n                        result += \"/** \" + jaVar[i] + \" */\" + \"\\n\"\r\n                                + \"readonly \" + enVar[i] + \": KnockoutObservable<number>;\" + \"\\n\"\r\n                                + \"/** \" + jaVar[i] + \"(focus) */\" + \"\\n\"\r\n                                + \"readonly focus\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\"\r\n                                + \"/** \" + jaVar[i] + \"(disable) */\" + \"\\n\"\r\n                                + \"readonly disable\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\";\r\n                        break;\r\n                    case \"function\":\r\n                        result += \"/** \" + jaVar[i] + \"(focus) */\" + \"\\n\"\r\n                                + \"readonly focus\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\"\r\n                                + \"/** \" + jaVar[i] + \"(disable) */\" + \"\\n\"\r\n                                + \"readonly disable\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\";\r\n                    default:\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: 'Data Type does not match',\r\n                          })\r\n                        break;\r\n                }\r\n            } else {\r\n                result += \"/** \" + jaVar[i] + \" */\" + \"\\n\"\r\n                    + \"private \" + enVar[i] + \": \" +  dataType[i] +\";\" + \"\\n\"\r\n            }\r\n        }\r\n        this.setState({\r\n            result: result\r\n        })\r\n    }\r\n    onChange = (e) => {\r\n        let name = e.nativeEvent.target.name;\r\n        let value = e.target.value.split(\"\\n\");\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    copy = () => {\r\n        const el = document.createElement('textarea');\r\n        el.value = this.state.result;\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n    }\r\n\r\n    Clear = () => {\r\n        this.setState({\r\n            jaVar: [],\r\n            enVar: [],\r\n            dataType: [],\r\n            result: \"\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {jaVar, enVar, dataType} = this.state;\r\n        jaVar = jaVar.join(\"\\n\");\r\n        enVar = enVar.join(\"\\n\");\r\n        dataType = dataType.join(\"\\n\");\r\n        return (\r\n            <div className = {style.GenerateConstructorVariables}>\r\n                <div className = \"input-area d-flex\">\r\n                    <div className=\"japanese-variable input-variable\">\r\n                        <label>Japanese Variables</label>\r\n                        <textarea name = \"jaVar\" value = {jaVar} onChange = {this.onChange}></textarea>\r\n                    </div>\r\n                    <div className=\"english-variable input-variable\">\r\n                        <label>English Variables</label>\r\n                        <textarea name = \"enVar\" value = {enVar} onChange = {this.onChange}></textarea>\r\n                    </div>\r\n                    <div className=\"data-type input-variable\">\r\n                        <label>Data Type</label>\r\n                        <textarea name = \"dataType\" value = {dataType} onChange = {this.onChange}></textarea>\r\n                    </div>\r\n                    <div className=\"convert\">\r\n                        <button className = \"btn btn-success\" onClick = {this.convert}>Convert</button>\r\n                        <button className = \"btn btn-danger\" onClick = {this.Clear}>Clear</button>\r\n                    </div>\r\n                </div>\r\n                <div className = \"result-area\">\r\n                    <div className = \"d-flex justify-content-between\">\r\n                        <label>Result</label>\r\n                        <button className = \"btn btn-light btn-outline-secondary\" onClick = {this.copy}>Copy</button>\r\n                    </div>\r\n                    <textarea value = {this.state.result} disabled>\r\n                    </textarea>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}