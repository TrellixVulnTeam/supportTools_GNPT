{"ast":null,"code":"var _jsxFileName = \"D:\\\\Font-End\\\\support-tool-v2\\\\support-tool\\\\src\\\\components\\\\Page\\\\GenerateConstructorVariables\\\\GenerateConstructorVariables.js\";\nimport React, { Component } from 'react';\nimport Swal from 'sweetalert2';\nimport style from './GenerateConstructorVariables.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class GenerateConstructorVariables extends Component {\n  constructor(props) {\n    super(props);\n\n    this.convert = () => {\n      let {\n        jaVar,\n        enVar,\n        dataType\n      } = this.state;\n      console.log(jaVar.length * enVar.length * dataType.length);\n\n      if (jaVar.length * enVar.length * dataType.length / (jaVar.length + enVar.length + dataType.length) !== 1) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Line numbers of fields do not match'\n        });\n      }\n    };\n\n    this.onChange = e => {\n      let name = e.nativeEvent.target.name;\n      let value = e.target.value.split(\"\\n\");\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      jaVar: [],\n      enVar: [],\n      dataType: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.GenerateConstructorVariables,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"japanese-variable input-variable\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Japanese Variables\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"jaVar\",\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"english-variable input-variable\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"English Variables\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"enVar\",\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-type input-variable\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Data Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"dataType\",\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"convert\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: this.convert,\n            children: \"Convert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Font-End/support-tool-v2/support-tool/src/components/Page/GenerateConstructorVariables/GenerateConstructorVariables.js"],"names":["React","Component","Swal","style","GenerateConstructorVariables","constructor","props","convert","jaVar","enVar","dataType","state","console","log","length","fire","icon","title","text","onChange","e","name","nativeEvent","target","value","split","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport style from './GenerateConstructorVariables.module.scss';\r\n\r\nexport default class GenerateConstructorVariables extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            jaVar: [],\r\n            enVar: [],\r\n            dataType: []\r\n        }\r\n    }\r\n    convert = () => {\r\n        let {jaVar, enVar, dataType} = this.state;\r\n        console.log(jaVar.length * enVar.length * dataType.length)\r\n        if ((jaVar.length * enVar.length * dataType.length)/(jaVar.length + enVar.length + dataType.length) !== 1) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Line numbers of fields do not match',\r\n              })\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        let name = e.nativeEvent.target.name;\r\n        let value = e.target.value.split(\"\\n\");\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className = {style.GenerateConstructorVariables}>\r\n                <div className = \"input-area d-flex\">\r\n                    <div className=\"japanese-variable input-variable\">\r\n                        <label>Japanese Variables</label>\r\n                        <textarea name = \"jaVar\" onChange = {this.onChange}></textarea>\r\n                    </div>\r\n                    <div className=\"english-variable input-variable\">\r\n                        <label>English Variables</label>\r\n                        <textarea name = \"enVar\" onChange = {this.onChange}></textarea>\r\n                    </div>\r\n                    <div className=\"data-type input-variable\">\r\n                        <label>Data Type</label>\r\n                        <textarea name = \"dataType\" onChange = {this.onChange}></textarea>\r\n                    </div>\r\n                    <div className=\"convert\">\r\n                        <button className = \"btn btn-success\" onClick = {this.convert}>Convert</button>\r\n                    </div>\r\n                </div>\r\n                <div className = \"result-area\">\r\n                    <label>Result</label>\r\n                    <textarea disabled>\r\n                    </textarea>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}