{"ast":null,"code":"var _jsxFileName = \"D:\\\\Font-End\\\\support-tool-v2\\\\support-tool\\\\src\\\\components\\\\Page\\\\GenerateConstructorVariables\\\\GenerateConstructorVariables.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Swal from 'sweetalert2';\nimport style from './GenerateConstructorVariables.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GenerateConstructorVariables(props) {\n  _s();\n\n  let [state, setState] = useState({\n    jaVar: [],\n    enVar: [],\n    dataType: [],\n    result: \"\"\n  });\n  const inputJa = useRef(null);\n\n  let convert = () => {\n    debugger;\n    let {\n      jaVar,\n      enVar,\n      dataType\n    } = state;\n\n    if (jaVar.length * enVar.length * dataType.length === 0) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'All fields must be entered'\n      });\n      return;\n    }\n\n    if ((jaVar.length + enVar.length + dataType.length) / (jaVar.length * 3) !== 1) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'Line numbers of fields do not match'\n      });\n    }\n\n    let result = \"\";\n\n    for (let i = 0; i < jaVar.length; i++) {\n      if (enVar[i].indexOf('_') < 0) {\n        switch (dataType[i]) {\n          case \"string\":\n            result += \"/** \" + jaVar[i] + \" */\" + \"\\n\" + \"readonly \" + enVar[i] + \": KnockoutObservable<string>;\" + \"\\n\" + \"/** \" + jaVar[i] + \"(focus) */\" + \"\\n\" + \"readonly focus\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\" + \"/** \" + jaVar[i] + \"(disable) */\" + \"\\n\" + \"readonly disable\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\";\n            break;\n\n          case \"integer\":\n            result += \"/** \" + jaVar[i] + \" */\" + \"\\n\" + \"readonly \" + enVar[i] + \": KnockoutObservable<number>;\" + \"\\n\" + \"/** \" + jaVar[i] + \"(focus) */\" + \"\\n\" + \"readonly focus\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\" + \"/** \" + jaVar[i] + \"(disable) */\" + \"\\n\" + \"readonly disable\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\";\n            break;\n\n          case \"function\":\n            result += \"/** \" + jaVar[i] + \"(focus) */\" + \"\\n\" + \"readonly focus\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\" + \"/** \" + jaVar[i] + \"(disable) */\" + \"\\n\" + \"readonly disable\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\";\n        }\n      } else {\n        result += \"/** \" + jaVar[i] + \" */\" + \"\\n\" + \"private \" + enVar[i] + \": \" + dataType[i] + \";\" + \"\\n\";\n      }\n    }\n\n    setState({ ...state,\n      result: result\n    });\n  };\n\n  const updateState = newState => setState(Object.assign({}, state, newState));\n\n  let onChange = e => {\n    console.log(state);\n    let name = e.nativeEvent.target.name;\n    let value = e.target.value.trim().split(\"\\n\");\n    value = value.filter(el => {\n      return el != \"\";\n    });\n    updateState({ ...state,\n      [name]: value\n    });\n  };\n\n  let copy = () => {\n    const el = document.createElement('textarea');\n    el.value = state.result;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n  };\n\n  let Clear = () => {\n    console.log(inputJa);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.GenerateConstructorVariables,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"japanese-variable input-variable\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Japanese Variables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"jaVar\",\n          ref: inputJa,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"english-variable input-variable\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"English Variables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"enVar\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-type input-variable\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Data Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"dataType\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"convert\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: convert,\n          children: \"Convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-light btn-outline-secondary\",\n          onClick: copy,\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: state.result,\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GenerateConstructorVariables, \"dpvJSLpfARRENm8TFqudbZ7zV98=\");\n\n_c = GenerateConstructorVariables;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateConstructorVariables\");","map":{"version":3,"sources":["D:/Font-End/support-tool-v2/support-tool/src/components/Page/GenerateConstructorVariables/GenerateConstructorVariables.js"],"names":["React","useState","useEffect","useCallback","useRef","Swal","style","GenerateConstructorVariables","props","state","setState","jaVar","enVar","dataType","result","inputJa","convert","length","fire","icon","title","text","i","indexOf","updateState","newState","Object","assign","onChange","e","console","log","name","nativeEvent","target","value","trim","split","filter","el","copy","document","createElement","body","appendChild","select","execCommand","removeChild","Clear"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback, useRef} from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport style from './GenerateConstructorVariables.module.scss';\r\n\r\nexport default function GenerateConstructorVariables(props) {\r\n    let [state, setState] = useState({\r\n        jaVar: [],\r\n        enVar: [],\r\n        dataType: [],\r\n        result: \"\",\r\n    });\r\n    const inputJa = useRef(null);\r\n\r\n    let convert = () => {\r\n        debugger;\r\n        let {jaVar, enVar, dataType} = state;\r\n        if (jaVar.length * enVar.length * dataType.length === 0) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'All fields must be entered',\r\n              })\r\n              return;\r\n        }\r\n        if ((jaVar.length + enVar.length + dataType.length)/(jaVar.length*3) !== 1) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Line numbers of fields do not match',\r\n              })\r\n        }\r\n\r\n        let result = \"\";\r\n        \r\n        for(let i = 0; i< jaVar.length ; i++) {\r\n            if (enVar[i].indexOf('_') < 0) {\r\n                switch (dataType[i]) {\r\n                    case \"string\":\r\n                        result += \"/** \" + jaVar[i] + \" */\" + \"\\n\"\r\n                                + \"readonly \" + enVar[i] + \": KnockoutObservable<string>;\" + \"\\n\"\r\n                                + \"/** \" + jaVar[i] + \"(focus) */\" + \"\\n\"\r\n                                + \"readonly focus\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\"\r\n                                + \"/** \" + jaVar[i] + \"(disable) */\" + \"\\n\"\r\n                                + \"readonly disable\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\";\r\n                        break;\r\n                    case \"integer\":\r\n                        result += \"/** \" + jaVar[i] + \" */\" + \"\\n\"\r\n                                + \"readonly \" + enVar[i] + \": KnockoutObservable<number>;\" + \"\\n\"\r\n                                + \"/** \" + jaVar[i] + \"(focus) */\" + \"\\n\"\r\n                                + \"readonly focus\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\"\r\n                                + \"/** \" + jaVar[i] + \"(disable) */\" + \"\\n\"\r\n                                + \"readonly disable\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\";\r\n                        break;\r\n                    case \"function\":\r\n                        result += \"/** \" + jaVar[i] + \"(focus) */\" + \"\\n\"\r\n                                + \"readonly focus\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\"\r\n                                + \"/** \" + jaVar[i] + \"(disable) */\" + \"\\n\"\r\n                                + \"readonly disable\" + enVar[i] + \": KnockoutObservable<boolean>;\" + \"\\n\";\r\n                }\r\n            } else {\r\n                result += \"/** \" + jaVar[i] + \" */\" + \"\\n\"\r\n                    + \"private \" + enVar[i] + \": \" +  dataType[i] +\";\" + \"\\n\"\r\n            }\r\n        }\r\n        setState({\r\n            ...state,\r\n            result: result\r\n        })\r\n    }\r\n    const updateState = newState => setState(Object.assign({}, state, newState));\r\n\r\n    let onChange = (e) => {\r\n        console.log(state);\r\n        let name = e.nativeEvent.target.name;\r\n        let value = e.target.value.trim().split(\"\\n\");\r\n        value = value.filter((el) => {\r\n            return el != \"\";\r\n        });\r\n        updateState({\r\n            ...state,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    let copy = () => {\r\n        const el = document.createElement('textarea');\r\n        el.value = state.result;\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n    }\r\n\r\n    let Clear = () => {\r\n        console.log(inputJa)\r\n    }\r\n\r\n    return (\r\n        <div className = {style.GenerateConstructorVariables}>\r\n            <div className = \"input-area d-flex\">\r\n                <div className=\"japanese-variable input-variable\">\r\n                    <label>Japanese Variables</label>\r\n                    <textarea name = \"jaVar\" ref={inputJa} onChange = {onChange}></textarea>\r\n                </div>\r\n                <div className=\"english-variable input-variable\">\r\n                    <label>English Variables</label>\r\n                    <textarea name = \"enVar\" onChange = {onChange}></textarea>\r\n                </div>\r\n                <div className=\"data-type input-variable\">\r\n                    <label>Data Type</label>\r\n                    <textarea name = \"dataType\" onChange = {onChange}></textarea>\r\n                </div>\r\n                <div className=\"convert\">\r\n                    <button className = \"btn btn-success\" onClick = {convert}>Convert</button>\r\n                    <button className = \"btn btn-danger\">Clear</button>\r\n                </div>\r\n            </div>\r\n            <div className = \"result-area\">\r\n                <div className = \"d-flex justify-content-between\">\r\n                    <label>Result</label>\r\n                    <button className = \"btn btn-light btn-outline-secondary\" onClick = {copy}>Copy</button>\r\n                </div>\r\n                <textarea value = {state.result} disabled>\r\n                </textarea>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}